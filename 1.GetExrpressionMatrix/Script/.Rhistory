which(R)
which
setwd("D:/Drivers/MyWorkPlace/R")
install.packages('GEOquery')
install.packages('Rtools')
install.packages("BiocManager")
BiocManager::install('GEOquery')
library(GEOquery)
gset <- getGEO('GSE42872', destdir = '.')
gset <- getGEO('GSE42872', destdir = '.')
View(gset)
a <- read.table('GSE42872_series_matrix.txt.gz',comment.char = '!', sep = '/t' )
a <- read.table('GSE42872_series_matrix.txt.gz',comment.char = '!', sep = '\t' )
View(a)
a <- read.table('GSE42872_series_matrix.txt.gz',comment.char = '!', sep = '\t' ,header = 'T')
a <- read.table('GSE42872_series_matrix.txt.gz',comment.char = '!', sep = '\t' ,header = T)
head(gset)
class(a)
gzfile
b <- gzfile(GSE42872_series_matrix.txt.gz)
?gzfile
b <- gzfile("GSE42872_series_matrix.txt.gz")
class(b)
read.table(b)
read.table(b, sep='\t', quote='', header = T)
read.table(b, sep='\t', quote='', header = T, comment.char = '!')
c=read.table(gzfile("GSE42872_series_matrix.txt.gz"),
header=T, comment.char = '!', sep = '\t' )
txtfile <- gzfile("GSE42872_series_matrix.txt.gz")
a=read.table(txtfile,
header=T, comment.char = '!', sep = '\t' )
matrix=read.table(txtfile,
header=T, comment.char = '!', sep = '\t' )
matrix=read.table(txtfile,
header=T, comment.char = '!', sep = '\t' )
data.matrix=read.table(txtfile,
header=T, comment.char = '!', sep = '\t' )
txt.file <- gzfile("GSE42872_series_matrix.txt.gz")
data.matrix=read.table(txtfile,
header=T, comment.char = '!', sep = '\t' )
txt.file <- gzfile("GSE42872_series_matrix.txt.gz")
data.matrix=read.table(txt.file,
header=T, comment.char = '!', sep = '\t' )
write.csv(data.matrix, file = 'ExpressionData')
write.csv(data.matrix, file = 'ExpressionData.txt')
read.csv("ExpressionData.csv")
library(GEOquery)  #读取GEOquery包
#下载GSE文件，目标文件夹：本文件夹下
gset <- getGEO('GSE42872', destdir = '.')
#下载得到matrix的.gz文件，首先将其解压为.txt
#或者用7-zip软件解压.gz文件
txt.file <- gzfile("GSE42872_series_matrix.txt.gz")
#打开文件后用记事本观察数据形状
#发现真正数据使用tab键分割，注释语言使用！符号开头
data.matrix=read.table(txt.file,
header=T, comment.char = '!', sep = '\t' )
write.csv(data.matrix, file = 'ExpressionData.csv')
q()
